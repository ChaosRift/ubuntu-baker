name: Build All Image in Parallel
run-name: >
  Build by @${{ github.actor }} [${{
    (github.event_name == 'repository_dispatch' && github.event.client_payload.trigger_source) ||
    github.event_name
  }}] on ${{
    (github.event_name == 'workflow_dispatch' && github.event.inputs.runner) ||
    (github.event_name == 'repository_dispatch' && github.event.client_payload.runner) ||
    'ubuntu-latest'
  }}

# This workflow builds Ubuntu Rockchip images using a smart matrix system that
# deduplicates artifact builds. The matrix generator analyzes board configurations
# and only builds the unique rootfs, kernel, and u-boot artifacts needed.
#
# Boards to build can be specified:
# 1. Default: handy-hpd5kx,orangepi-5-plus,orangepi-5b,radxa-rock-5b
# 2. Workflow input: Set "boards_to_build" when running manually
# 3. Environment variable: Edit BOARDS_TO_BUILD below
# 4. Repository dispatch: Pass boards_to_build in client_payload

on:
  repository_dispatch:
    types: [build-all-trigger]

  workflow_dispatch:
    inputs:
      runner:
        description: 'Specify the runner label (e.g., ubuntu-latest, windows-latest, self-hosted-runner).'
        required: false
        type: choice
        default: 'ubuntu-latest'
        options:
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - github-linux64-ubuntu-latest-8core  # Large GitHub-hosted runner
          - github-arm64-ubuntu-24.04-8core  # ARM64 self-hosted runner

      boards_to_build:
        description: 'Comma-separated list of boards to build (leave empty to use default)'
        required: false
        type: string
        default: ''

      baker_artifact_retention_days:
        description: 'Retention days for baker artifacts'
        required: false
        type: number
        default: 1

      image_artifact_retention_days:
        description: 'Retention days for artifacts downloaded from bakers and the final image'
        required: false
        type: number
        default: 90

      release_id:
        description: 'Release ID for the image'
        required: false
        type: string
        default: ''

      release_tag:
        description: 'Release tag for the image'
        required: false
        type: string
        default: ''

      os_version:
        description: 'OS version for build matrix (e.g. ubuntu-24.04)'
        required: false
        type: string
        default: 'ubuntu-24.04'

env:
  RECIPE_REP: "diverger/ubuntu-rockchip"
  RECIPE_REF: "diverger"
  RECIPE_DIR: "."

  # Define the boards to build (change this list as needed)
  BOARDS_TO_BUILD: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.boards_to_build != '' && github.event.inputs.boards_to_build) || (github.event_name == 'repository_dispatch' && github.event.client_payload.boards_to_build) || 'handy-hpd5kx-aim7' }}
  EFFECTIVE_TRIGGER_SOURCE: ${{ (github.event_name == 'repository_dispatch' && github.event.client_payload.trigger_source) || github.event_name }}
  EFFECTIVE_BAKER_ARTIFACT_RETENTION_DAYS: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.baker_artifact_retention_days) || (github.event_name == 'repository_dispatch' && github.event.client_payload.baker_artifact_retention_days) || 1 }}
  EFFECTIVE_IMAGE_ARTIFACT_RETENTION_DAYS: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.image_artifact_retention_days) || (github.event_name == 'repository_dispatch' && github.event.client_payload.image_artifact_retention_days) || 90 }}
  EFFECTIVE_RELEASE_ID: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.release_id) || (github.event_name == 'repository_dispatch' && github.event.client_payload.release_id) || '' }}
  EFFECTIVE_RELEASE_TAG: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag) || (github.event_name == 'repository_dispatch' && github.event.client_payload.release_tag) || '' }}
  EFFECTIVE_RUNNER: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.runner) || (github.event_name == 'repository_dispatch' && github.event.client_payload.runner) || 'ubuntu-latest' }}
  EFFECTIVE_OS_VERSION: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.os_version) || (github.event_name == 'repository_dispatch' && github.event.client_payload.os_version) || 'ubuntu-24.04' }}

jobs:
  matrix:
    if: ${{ github.actor == 'diverger' }}
    runs-on: ubuntu-latest
    name: Generate Build Matrices
    outputs:
      rootfs-matrix: ${{ steps.matrices.outputs.rootfs-matrix }}
      kernel-matrix: ${{ steps.matrices.outputs.kernel-matrix }}
      uboot-matrix: ${{ steps.matrices.outputs.uboot-matrix }}
      image-matrix: ${{ steps.matrices.outputs.image-matrix }}
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Generate build matrices
        id: matrices
        run: |
          cd ${{ env.RECIPE_DIR }}
          chmod +x scripts/ci/generate-build-matrix.sh

          echo "ðŸŽ¯ Building for boards: ${{ env.BOARDS_TO_BUILD }}"
          echo "Using OS version: ${{ env.EFFECTIVE_OS_VERSION }}"

          echo "Generating rootfs matrix..."
          rootfs_matrix=$(scripts/ci/generate-build-matrix.sh --boards "${{ env.BOARDS_TO_BUILD }}" --type rootfs --output json --os-version "${{ env.EFFECTIVE_OS_VERSION }}")
          echo "rootfs-matrix=$rootfs_matrix" >> $GITHUB_OUTPUT
          echo "Rootfs matrix: $rootfs_matrix"

          echo "Generating kernel matrix..."
          kernel_matrix=$(scripts/ci/generate-build-matrix.sh --boards "${{ env.BOARDS_TO_BUILD }}" --type kernel --output json --os-version "${{ env.EFFECTIVE_OS_VERSION }}")
          echo "kernel-matrix=$kernel_matrix" >> $GITHUB_OUTPUT
          echo "Kernel matrix: $kernel_matrix"

          echo "Generating uboot matrix..."
          uboot_matrix=$(scripts/ci/generate-build-matrix.sh --boards "${{ env.BOARDS_TO_BUILD }}" --type uboot --output json --os-version "${{ env.EFFECTIVE_OS_VERSION }}")
          echo "uboot-matrix=$uboot_matrix" >> $GITHUB_OUTPUT
          echo "Uboot matrix: $uboot_matrix"

          echo "Generating image matrix..."
          image_matrix=$(scripts/ci/generate-build-matrix.sh --boards "${{ env.BOARDS_TO_BUILD }}" --type image --output json --os-version "${{ env.EFFECTIVE_OS_VERSION }}")
          echo "image-matrix=$image_matrix" >> $GITHUB_OUTPUT
          echo "Image matrix: $image_matrix"

      - name: Show matrix summary
        run: |
          echo "### ðŸ“Š Build Matrix Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Matrix Type | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Rootfs | $(echo '${{ steps.matrices.outputs.rootfs-matrix }}' | jq length) |" >> $GITHUB_STEP_SUMMARY
          echo "| Kernel | $(echo '${{ steps.matrices.outputs.kernel-matrix }}' | jq length) |" >> $GITHUB_STEP_SUMMARY
          echo "| U-Boot | $(echo '${{ steps.matrices.outputs.uboot-matrix }}' | jq length) |" >> $GITHUB_STEP_SUMMARY
          echo "| Images | $(echo '${{ steps.matrices.outputs.image-matrix }}' | jq length) |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸš€ U-Boot Deduplication Details" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.matrices.outputs.uboot-matrix }}' | jq . >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  rootfs:
    if: ${{ github.actor == 'diverger' }}
    needs: matrix
    runs-on: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.runner) || (github.event_name == 'repository_dispatch' && github.event.client_payload.runner) || 'ubuntu-latest' }}
    name: Build rootfs
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.rootfs-matrix) }}

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ env.EFFECTIVE_TRIGGER_SOURCE }}"
          echo "Event name: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        id: baker_step
        uses: "./.github/actions/rootfs-baker"
        with:
          suite: ${{ matrix.suite }}
          flavor: ${{ matrix.flavor }}
          variant: ${{ matrix.variant }}
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          artifact_retention_days: ${{ format('{0}', env.EFFECTIVE_BAKER_ARTIFACT_RETENTION_DAYS) }}

  kernel:
    if: ${{ github.actor == 'diverger' }}
    needs: matrix
    runs-on: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.runner) || (github.event_name == 'repository_dispatch' && github.event.client_payload.runner) || 'ubuntu-latest' }}
    name: Build kernel
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.kernel-matrix) }}

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ env.EFFECTIVE_TRIGGER_SOURCE }}"
          echo "Event name: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        id: baker_step
        uses: "./.github/actions/kernel-baker"
        with:
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          artifact_retention_days: ${{ format('{0}', env.EFFECTIVE_BAKER_ARTIFACT_RETENTION_DAYS) }}

  uboot:
    if: ${{ github.actor == 'diverger' }}
    needs: matrix
    runs-on: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.runner) || (github.event_name == 'repository_dispatch' && github.event.client_payload.runner) || 'ubuntu-latest' }}
    name: Build u-boot
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.uboot-matrix) }}

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ env.EFFECTIVE_TRIGGER_SOURCE }}"
          echo "Event name: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        id: baker_step
        uses: "./.github/actions/uboot-baker"
        with:
          board: ${{ matrix.representative_board }}
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          artifact_retention_days: ${{ format('{0}', env.EFFECTIVE_BAKER_ARTIFACT_RETENTION_DAYS) }}

  image:
    if: ${{ github.actor == 'diverger' && always() }}
    runs-on: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.runner) || (github.event_name == 'repository_dispatch' && github.event.client_payload.runner) || 'ubuntu-latest' }}
    needs: [matrix, rootfs, kernel, uboot]
    name: Build Ubuntu Rockchip Image
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.image-matrix || '[]') }}

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ env.EFFECTIVE_TRIGGER_SOURCE }}"
          echo "Event name: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        id: image_build_step
        uses: ./.github/actions/image-baker
        with:
          action_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          board: ${{ matrix.board }}
          suite: ${{ matrix.suite }}
          flavor: ${{ matrix.flavor }}
          variant: ${{ matrix.variant }}
          rootfs_artifact_name: ${{ matrix.rootfs_artifact_name || '' }}
          kernel_artifact_name: ${{ matrix.kernel_artifact_name || '' }}
          uboot_artifact_name: ${{ matrix.uboot_artifact_name || '' }}
          release_id: ${{ env.EFFECTIVE_RELEASE_ID }}
          release_tag: ${{ env.EFFECTIVE_RELEASE_TAG }}
          artifact_retention_days: ${{ env.EFFECTIVE_IMAGE_ARTIFACT_RETENTION_DAYS }}
          oss_key_id: ${{ secrets.OSS_ACCESS_KEY }}
          oss_key_secret: ${{ secrets.OSS_SECRET_KEY }}

      - name: Calculate expire date
        if: ${{ success() && steps.image_build_step.outcome == 'success' }}
        id: expire
        run: |
          expire_date=$(date -u -d "+${{ env.EFFECTIVE_IMAGE_ARTIFACT_RETENTION_DAYS }} days" +"%Y-%m-%d")
          echo "Expire date: $expire_date"
          echo "expire_date=$expire_date" >> $GITHUB_OUTPUT
          echo "ðŸ“… Artifact Expire Date: $expire_date" >> $GITHUB_STEP_SUMMARY
